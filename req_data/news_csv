{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1lSbcs-A6VJ7JneTXJ206U5P9VIx755mC","authorship_tag":"ABX9TyPh0464PB6Hl6+kKyBLU658"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qoDh8XqIFW9c","executionInfo":{"status":"ok","timestamp":1758187785708,"user_tz":-330,"elapsed":832165,"user":{"displayName":"Akshaya Rajagopal","userId":"14710942961327266186"}},"outputId":"367789d7-990e-40e3-b338-12ad811dc4e5"},"outputs":[{"output_type":"stream","name":"stdout","text":[" Processing category: alt.atheism\n"," Processing category: comp.graphics\n"," Processing category: comp.os.ms-windows.misc\n"," Processing category: comp.sys.ibm.pc.hardware\n"," Processing category: comp.sys.mac.hardware\n"," Processing category: comp.windows.x\n"," Processing category: misc.forsale\n"," Processing category: rec.autos\n"," Processing category: rec.motorcycles\n"," Processing category: rec.sport.baseball\n"," Processing category: rec.sport.hockey\n"," Processing category: sci.crypt\n"," Processing category: sci.electronics\n"," Processing category: sci.med\n"," Processing category: sci.space\n"," Processing category: soc.religion.christian\n"," Processing category: talk.politics.guns\n"," Processing category: talk.politics.mideast\n"," Processing category: talk.politics.misc\n"," Processing category: talk.religion.misc\n"]},{"output_type":"stream","name":"stderr","text":["/tmp/ipython-input-4094060321.py:65: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.\n","  df = df.applymap(sanitize_for_excel)\n"]},{"output_type":"stream","name":"stdout","text":[" Saved 998 rows across 20 categories to 20news_18828_clean_50.xlsx\n"]}],"source":["import os\n","import pandas as pd\n","import re\n","\n","def extract_body(text):\n","    \"\"\"\n","    Extract the body of a 20NG post:\n","    - Remove headers\n","    - Drop lines like Archive-name, Subject, From, etc.\n","    - Skip quoted lines (>)\n","    \"\"\"\n","    # Split headers vs body\n","    parts = re.split(r\"\\n\\s*\\n\", text, maxsplit=1)\n","    body = parts[1] if len(parts) > 1 else parts[0]\n","\n","    # Drop metadata lines\n","    cleaned_lines = []\n","    for line in body.splitlines():\n","        if re.match(r\"^(Archive-name|From|Subject|Path|Xref|Organization|Lines|Newsgroups|Message-ID|Keywords):\", line, re.I):\n","            continue\n","        if line.strip().startswith(\">\"):  # quoted text\n","            continue\n","        cleaned_lines.append(line)\n","\n","    # Remove illegal Excel characters\n","    body_text = \"\\n\".join(cleaned_lines).strip()\n","    body_text = re.sub(r\"[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F]\", \"\", body_text)\n","\n","    return body_text\n","\n","\n","def sanitize_for_excel(value: str) -> str:\n","    \"\"\"Prevent Excel from misinterpreting text as a formula.\"\"\"\n","    if isinstance(value, str) and value and value[0] in ('=', '+', '-', '@'):\n","        return \"'\" + value\n","    return value\n","\n","\n","def convert_20ng_to_excel(root_folder, output_excel, max_files=50):\n","    data = []\n","    for category in sorted(os.listdir(root_folder)):\n","        category_path = os.path.join(root_folder, category)\n","        if os.path.isdir(category_path):\n","            print(f\" Processing category: {category}\")\n","            for i, filename in enumerate(os.listdir(category_path)):\n","                if i >= max_files:\n","                    break\n","                file_path = os.path.join(category_path, filename)\n","                try:\n","                    with open(file_path, 'r', encoding='latin1') as f:\n","                        raw_text = f.read()\n","                        body = extract_body(raw_text)\n","                        if body:\n","                            data.append({\n","                                \"filename\": filename,\n","                                \"category\": category,\n","                                \"text\": body\n","                            })\n","                except Exception as e:\n","                    print(f\" Skipping {file_path}: {e}\")\n","\n","    df = pd.DataFrame(data)\n","\n","\n","    df = df.applymap(sanitize_for_excel)\n","\n","\n","    df.to_excel(output_excel, index=False, engine=\"openpyxl\")\n","    print(f\" Saved {len(df)} rows across {df['category'].nunique()} categories to {output_excel}\")\n","\n","\n","# Run\n","convert_20ng_to_excel(\"/content/drive/MyDrive/req_data/20news-18828\", \"20news_18828_clean_50.xlsx\", max_files=50)"]}]}